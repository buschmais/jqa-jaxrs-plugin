<jqa:jqassistant-rules xmlns:jqa="http://www.buschmais.com/jqassistant/core/analysis/rules/schema/v1.0">

	<concept id="jaxrs:EntityProvider">
		<description>Finds classes that implement "javax.ws.rs.ext.MessageBodyReader" 
		or "javax.ws.rs.ext.MessageBodyWriter" and labels them with 'JaxRS' and 'EntityProvider'
		</description>
		<cypher><![CDATA[
            MATCH 
              (c:Type:Class)-[:IMPLEMENTS]->(a:Type)
			WHERE 
              a.fqn IN ["javax.ws.rs.ext.MessageBodyReader", "javax.ws.rs.ext.MessageBodyWriter"]
            SET 
              c:JaxRS:EntityProvider
            RETURN 
              DISTINCT c as EntityProvider
        ]]></cypher>
	</concept>

	<concept id="jaxrs:ContextProvider">
		<description>Finds classes that implement "javax.ws.rs.ext.ContextResolver" and labels them with 'JaxRS' and 'ContextProvider'
		</description>
		<cypher><![CDATA[
            MATCH 
              (c:Type:Class)-[:IMPLEMENTS]->(a:Type)
			WHERE 
              a.fqn = "javax.ws.rs.ext.ContextResolver"
            SET 
              c:JaxRS:ContextProvider
            RETURN 
              DISTINCT c as ContextProvider
        ]]></cypher>
	</concept>

	<concept id="jaxrs:ExceptionMappingProvider">
		<description>Finds classes that implement "javax.ws.rs.ext.ExceptionMapper" and labels them with 'JaxRS' and 'ExceptionMappingProvider'
		</description>
		<cypher><![CDATA[
            MATCH 
              (c:Type:Class)-[:IMPLEMENTS]->(a:Type)
			WHERE 
              a.fqn = "javax.ws.rs.ext.ExceptionMapper"
            SET 
              c:JaxRS:ExceptionMappingProvider
            RETURN 
              DISTINCT c as ExceptionMappingProvider
        ]]></cypher>
	</concept>
	
</jqa:jqassistant-rules>